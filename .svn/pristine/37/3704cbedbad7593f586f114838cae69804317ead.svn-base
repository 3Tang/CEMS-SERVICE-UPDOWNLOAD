/**   
* @Title: FileUtil.java 
* @Package com.vrv.cems.service.updownload.util 
* @Description: TODO(用一句话描述该文件做什么) 
* @author tangtieqiao
		   tangtieqiao@vrvmail.com.cn
* @date 2015年8月28日 上午10:18:34 
* @version V1.0   
*/
package com.vrv.cems.service.updownload.util;

import java.io.File;
import java.io.IOException;

import org.apache.log4j.Logger;



/** 
 * @ClassName: FileUtil 
 * @Description: TODO(这里用一句话描述这个类的作用) 
 * @author tangtieqiao
			tangtieqiao@vrvmail.com.cn
 * @date 2015年8月28日 上午10:18:34 
 *  
 */
public class FileUtil {
	static Logger logger = Logger.getLogger(FileUtil.class);
	 public static boolean createDir(String destDirName) {  
	        File dir = new File(destDirName);  
	        if (dir.exists()) {  
	            logger.info("创建目录" + destDirName + "失败，目标目录已经存在");  
	            return false;  
	        }  
	        if (!destDirName.endsWith(File.separator)) {  
	            destDirName = destDirName + File.separator;  
	        }  
	        //创建目录  
	        if (dir.mkdirs()) {  
	        	dir.setExecutable(true);//设置可执行权限
	        	dir.setReadable(true);//设置可读权限
	        	dir.setWritable(true);
	            logger.info("创建目录" + destDirName + "成功！");  
	            logger.info("目录canExecute" + dir.canExecute());
	            logger.info("目录canRead" + dir.canRead());
	            logger.info("目录canWrite" + dir.canWrite());
	            return true;  
	        } else {  
	            logger.info("创建目录" + destDirName + "失败！");  
	            return false;  
	        }  
	    }  
	 
	 
	 public static boolean createFile(String destFileName) {  
	        File file = new File(destFileName);  
	        if(file.exists()) {  
	            logger.info("创建单个文件" + destFileName + "失败，目标文件已存在！");  
	            return false;  
	        }  
	        if (destFileName.endsWith(File.separator)) {  
	            logger.info("创建单个文件" + destFileName + "失败，目标文件不能为目录！");  
	            return false;  
	        }  
	        //判断目标文件所在的目录是否存在  
	        if(!file.getParentFile().exists()) {  
	            //如果目标文件所在的目录不存在，则创建父目录  
	            logger.info("目标文件所在目录不存在，准备创建它！");  
	            if(!file.getParentFile().mkdirs()) {  
	                logger.info("创建目标文件所在目录失败！");  
	                return false;  
	            }  
	        }  
	        //创建目标文件  
	        try {  
	            if (file.createNewFile()) {  
	                logger.info("创建单个文件" + destFileName + "成功！");  
	                return true;  
	            } else {  
	                logger.info("创建单个文件" + destFileName + "失败！");  
	                return false;  
	            }  
	        } catch (IOException e) {  
	            e.printStackTrace();  
	            logger.info("创建单个文件" + destFileName + "失败！" + e.getMessage());  
	            return false;  
	        }  
	    }  
	 
	 public static String getFileType(String fileName)
	 {
		 String[] fileNames=fileName.split(".");
		 int fileNameLength=fileName.length();
		 if(fileNameLength<2)
		 {
			 return fileName;
		 }
		 if(fileNameLength>=2)
		 {
			 return fileNames[fileNameLength-1];
		 }
		 
		return "";
		 
	 }
}
